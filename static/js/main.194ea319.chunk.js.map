{"version":3,"sources":["atoms.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList2.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","toDoCate","atom","key","default","TO_DO","toDoState","JSON","parse","localStorage","getItem","toDoSelector","selector","get","toDos","toDoCategory","filter","todo","category","CreateToDo","setToDos","useSetRecoilState","categorySelect","useRecoilValue","useForm","register","handleSubmit","setValue","onSubmit","toDo","oldToDos","text","id","Date","now","required","placeholder","ToDo","onClick","event","name","currentTarget","targetIndex","findIndex","oldToDo","newToDo","console","log","slice","DOING","DONE","DELETE","ToDoList2","toDosValue","useRecoilState","setCategory","useEffect","setItem","stringify","value","onInput","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","cardBgColor","document","getElementById"],"mappings":"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","file":"static/js/main.194ea319.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n  \"DELETE\" = \"DELETE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const toDoCate = atom<Categories>({\n  key: \"toDoCate\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: JSON.parse(localStorage.getItem(\"TODO\") || \"[]\"),\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const toDoCategory = get(toDoCate);\n    return toDos.filter((todo) => todo.category === toDoCategory);\n  },\n});\n","import { useForm } from \"react-hook-form\";\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { toDoCate, toDoState } from \"../atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const categorySelect = useRecoilValue(toDoCate);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [\n      ...oldToDos,\n      { text: toDo, id: Date.now(), category: categorySelect },\n    ]);\n    setValue(\"toDo\", \"\");\n    \n  };\n  \n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input\n        {...register(\"toDo\", {\n          required: \"Please Write To Do\",\n        })}\n        placeholder=\"Write to do\"\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDo;\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { Categories, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex((toDo) => toDo.id === id);\n      const oldToDo = oldToDos[targetIndex];\n      const newToDo = { text: text, id: id, category: name as any };\n      console.log(targetIndex, oldToDo, newToDo);\n      return [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1),\n      ];\n    });\n  };\n  const deleteClick = () => {\n    setToDos((oldToDos) => {\n      const findIndex = oldToDos.findIndex((todo) => todo.id === id);\n      return [\n        ...oldToDos.slice(0, findIndex),\n        ...oldToDos.slice(findIndex + 1),\n      ];\n    });\n  };\n  return (\n    <li>\n      <span>{text}</span>\n      {category !== Categories.DOING && (\n        <button name={Categories.DOING} onClick={onClick}>\n          Doing\n        </button>\n      )}\n      {category !== Categories.TO_DO ? (\n        <button name={Categories.TO_DO} onClick={onClick}>\n          To Do\n        </button>\n      ) : null}\n      {/* {category !== \"TO_DO\" && (\n        <button name=\"TO_DO\" onClick={onClick}> */}\n      {/* To Do\n        </button> */}\n      {/* )} */}\n      {category !== Categories.DONE && (\n        <button name={Categories.DONE} onClick={onClick}>\n          Done\n        </button>\n      )}\n      {category !== Categories.DELETE && (\n        <button name={Categories.DELETE} onClick={deleteClick}>\n          ‚ùå\n        </button>\n      )}\n    </li>\n  );\n}\n\nexport default ToDo;\n","import { useEffect } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { Categories, toDoCate, toDoSelector, toDoState } from \"../atoms\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList2() {\n  const toDos = useRecoilValue(toDoSelector);\n  const toDosValue = useRecoilValue(toDoState);\n  const [category, setCategory] = useRecoilState(toDoCate);\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCategory(event.currentTarget.value as any);\n    console.log(event.currentTarget.value);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"TODO\", JSON.stringify(toDosValue));\n  }, [toDosValue]);\n\n  return (\n    <div>\n      <h1>To Dos</h1>\n      <hr />\n      <select value={category} onInput={onInput}>\n        <option value={Categories.TO_DO}>To Do</option>\n        <option value={Categories.DOING}>Doing</option>\n        <option value={Categories.DONE}>Done</option>\n      </select>\n      <CreateToDo />\n      {toDos?.map((toDo) => (\n        <ToDo key={toDo.id} {...toDo} />\n      ))}\n    </div>\n  );\n}\n\nexport default ToDoList2;\n","import { createGlobalStyle } from \"styled-components\";\nimport ToDoList2 from \"./components/ToDoList2\";\n\n\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <ToDoList2 />\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  cardBgColor: \"transparent\",\n};"],"sourceRoot":""}